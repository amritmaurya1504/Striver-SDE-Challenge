import java.util.* ;
import java.io.*; 
public class Solution {
	public static int solve(int i, int j, int r, int c, int[][] dp){
		if(i == r - 1 && j == c - 1) return 1;
		if(i > r - 1 || j > c - 1) return 0;
		if(dp[i][j] != -1) return dp[i][j];

		int down = solve(i, j + 1, r, c, dp);
		int right = solve(i + 1, j , r, c, dp);

		return dp[i][j] = down + right;
	}
	public static int uniquePaths(int m, int n) {
		int[][] dp = new int[m+1][n+1];
		for(int[] row : dp){
			Arrays.fill(row, -1);
		}
		return solve(0, 0, m, n, dp);
	}
}